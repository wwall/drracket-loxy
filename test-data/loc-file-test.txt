
Процедура ЗаполнитьПоВидуИнструктажа() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|	РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	|	РаботникиОрганизаций.Сотрудник.Наименование КАК СотрудникНаименование
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК РаботникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыИнструктажейПоОхранеТруда.КонтролируемыеДолжности КАК ВидыИнструктажа
	|		ПО (РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
	|			И (ВидыИнструктажа.Ссылка = &ВидИнструктажа)
	|			И (ВЫБОР
	|				КОГДА РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|						И РаботникиОрганизаций.ПериодЗавершения < &ДатаСреза
	|					ТОГДА РаботникиОрганизаций.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизаций.Должность
	|			КОНЕЦ = ВидыИнструктажа.Должность)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИнструктажиПоОхранеТруда.СрезПоследних(
	|				&ДатаСреза,
	|				Организация = &Организация
	|					И ВидИнструктажа = &ВидИнструктажа) КАК ДействующиеИнструктажи
	|		ПО РаботникиОрганизаций.Сотрудник = ДействующиеИнструктажи.Сотрудник
	|			И (ВЫБОР
	|					КОГДА ВидыИнструктажа.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.День)
	|						ТОГДА ДОБАВИТЬКДАТЕ(ДействующиеИнструктажи.Период, ДЕНЬ, ВидыИнструктажа.Ссылка.СрокДействия)
	|					КОГДА ВидыИнструктажа.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Неделя)
	|						ТОГДА ДОБАВИТЬКДАТЕ(ДействующиеИнструктажи.Период, НЕДЕЛЯ, ВидыИнструктажа.Ссылка.СрокДействия)
	|					КОГДА ВидыИнструктажа.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц)
	|						ТОГДА ДОБАВИТЬКДАТЕ(ДействующиеИнструктажи.Период, МЕСЯЦ, ВидыИнструктажа.Ссылка.СрокДействия)
	|					КОГДА ВидыИнструктажа.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал)
	|						ТОГДА ДОБАВИТЬКДАТЕ(ДействующиеИнструктажи.Период, КВАРТАЛ, ВидыИнструктажа.Ссылка.СрокДействия)
	|					КОГДА ВидыИнструктажа.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Год)
	|						ТОГДА ДОБАВИТЬКДАТЕ(ДействующиеИнструктажи.Период, ГОД, ВидыИнструктажа.Ссылка.СрокДействия)
	|					КОГДА ВидыИнструктажа.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Декада)
	|						ТОГДА ДОБАВИТЬКДАТЕ(ДействующиеИнструктажи.Период, ДЕКАДА, ВидыИнструктажа.Ссылка.СрокДействия)
	|					КОГДА ВидыИнструктажа.Ссылка.Периодичность = ЗНАЧЕНИЕ(Перечисление.Периодичность.Полугодие)
	|						ТОГДА ДОБАВИТЬКДАТЕ(ДействующиеИнструктажи.Период, ПОЛУГОДИЕ, ВидыИнструктажа.Ссылка.СрокДействия)
	|					ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|				КОНЕЦ > &ДатаСреза
	|				ИЛИ ВидыИнструктажа.Ссылка.ПроводитсяОднократно
	|				ИЛИ &ВидИнструктажа = ЗНАЧЕНИЕ(Справочник.ВидыИнструктажейПоОхранеТруда.ВводныйИнструктаж))
	|			И (ДействующиеИнструктажи.Регистратор <> &Регистратор)
	|ГДЕ
	|	ДействующиеИнструктажи.Сотрудник ЕСТЬ NULL 
	|	И ВЫБОР
	|			КОГДА &ВидИнструктажа = ЗНАЧЕНИЕ(Справочник.ВидыИнструктажейПоОхранеТруда.ВводныйИнструктаж)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ВидыИнструктажа.Ссылка ЕСТЬ НЕ NULL 
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("ДатаСреза",		Дата);
	Запрос.УстановитьПараметр("ВидИнструктажа",	ВидИнструктажа);
	Запрос.УстановитьПараметр("Регистратор",	Ссылка);
	
	Работники.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ЗаполнитьПоВидуИнструктажа

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Для Каждого ПараметрЗаполнения Из ДанныеЗаполнения Цикл
			Если ЭтотОбъект.Метаданные().Реквизиты.Найти(ПараметрЗаполнения.Ключ) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ЭтотОбъект[ПараметрЗаполнения.Ключ]) Тогда
				ЭтотОбъект[ПараметрЗаполнения.Ключ] = ПараметрЗаполнения.Значение;
			КонецЕсли;
		КонецЦикла;
		Если ДанныеЗаполнения.Свойство("Работники") Тогда
			Для Каждого СтрокаЗначенийЗаполнения Из ДанныеЗаполнения.Работники Цикл
				ЗаполнитьЗначенияСвойств(Работники.Добавить(), СтрокаЗначенийЗаполнения);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ИнструктажиПоОхранеТруда
	Движения.ИнструктажиПоОхранеТруда.Записывать = Истина;
	Движения.ИнструктажиПоОхранеТруда.Очистить();
	Для Каждого ТекСтрокаРаботники Из Работники Цикл
		Движение = Движения.ИнструктажиПоОхранеТруда.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Сотрудник = ТекСтрокаРаботники.Сотрудник;
		Движение.ВидИнструктажа = ВидИнструктажа;
		Движение.Ответственный = Ответственный;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(Работники);
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
	ОбщегоНазначенияЗКПереопределяемый.ПроверитьНомерДокументаПередЗаписью(ЭтотОбъект);
	ОбщегоНазначенияЗКПереопределяемый.СброситьНомерДокументаПередЗаписьюПриИзмененииОрганизации(ЭтотОбъект);
	
КонецПроцедуры
